{"version":3,"sources":["../../../react/react-example/src/Header/header.css","../../../react/react-example/src/serviceWorker.js","../../../react/react-example/src/Header/header.js","../../../react/react-example/src/HomePage/Buy/buy.js","../../../react/react-example/src/HomePage/Sale/sale.js","../../../react/react-example/src/HomePage/homePage.js","../../../react/react-example/src/Login/login.js","../../../react/react-example/src/index.js"],"names":["module","exports","opc","header","Boolean","window","location","hostname","match","HeaderCss","require","DefaultHeader","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","logout","e","localStorage","removeItem","setState","username","state","getItem","userProfile","react_default","a","createElement","react_router_dom","to","es_button","type","onClick","pathname","message","className","React","Component","BuyPage","SalePage","HomePage","handle","console","log","header_DefaultHeader","basename","react_router","path","component","withRouter","LoginPage","changeValue","defineProperty","target","name","value","login","password","alert","setItem","history","push","menu","es_menu","Item","rel","href","id","onChange","dropdown","overlay","placement","IndexPage","ReactDOM","render","src_IndexPage","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"yIACAA,EAAAC,QAAA,CAAkBC,IAAA,0BAAAC,OAAA,6LCWEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,+ECfFC,EAAYC,EAAQ,KAEHC,cACjB,SAAAA,EAAYC,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACdE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAMVQ,OAAS,SAAAC,GACLhB,OAAOiB,aAAaC,WAAW,YAC/BlB,OAAOiB,aAAaC,WAAW,SAC/BV,EAAKW,SAAS,CACVC,SAAS,QATbZ,EAAKa,MAAM,CACPD,SAASpB,OAAOiB,aAAaK,QAAQ,aAH3Bd,wEAgBd,IAAIe,EAAY,KAchB,OAVIA,EADoB,MAArBZ,KAAKU,MAAMD,SAEVI,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAASC,GAAG,YAAYjB,KAAKU,MAAMD,UACnCI,EAAAC,EAAAC,cAAAG,EAAA,GAAQC,KAAK,UAAUC,QAASpB,KAAKI,QAArC,iBAIQS,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAASC,GAAI,CAACI,SAAS,SAASX,MAAM,CAACY,QAAQ,iBAA/C,gBAIZT,EAAAC,EAAAC,cAAA,OAAKQ,UAAW9B,EAAUN,QAEtB0B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAASC,GAAG,aAAZ,sBACCL,UAnC0BY,IAAMC,WCH5BC,mLAGb,OACIb,EAAAC,EAAAC,cAAA,gEAJyBS,IAAMC,WCAtBE,mLAGb,OACId,EAAAC,EAAAC,cAAA,4EAJ0BS,IAAMC,WCItCG,cAEF,SAAAA,EAAYhC,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA4B,IACd/B,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA8B,GAAAzB,KAAAH,KAAMJ,KAEViC,OAAS,kBACLC,QAAQC,IAAIlC,EAAKD,QAJHC,wEAQd,OACIgB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAAG,EAAA,GAAQE,QAASpB,KAAK6B,QAAtB,iBACAhB,EAAAC,EAAAC,cAACiB,EAAD,MACAnB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAeiB,SAAS,YACpBpB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,GAAG,QAAT,sBACAJ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,GAAG,SAAT,sBACAJ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,GAAG,UAAT,iBAEJJ,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAOC,KAAK,OAAOC,UAAWV,IAC9Bb,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAOC,KAAK,QAAQC,UAAWT,cAtBhCH,IAAMC,WA6BdY,cAAWT,8CCjCLU,cAEjB,SAAAA,EAAY1C,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAsC,IACdzC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAwC,GAAAnC,KAAAH,KAAMJ,KAMV2C,YAAc,SAAAlC,GACVR,EAAKW,SAALV,OAAA0C,EAAA,EAAA1C,CAAA,GACKO,EAAEoC,OAAOC,KAAMrC,EAAEoC,OAAOE,SATf9C,EAYlB+C,MAAQ,SAAAvC,GAEqB,QAAtBR,EAAKa,MAAMD,UAAwC,QAAtBZ,EAAKa,MAAMmC,UACvCC,MAAM,4BACNzD,OAAOiB,aAAayC,QAAQ,WAAW,OACvC1D,OAAOiB,aAAayC,QAAQ,QAAQ,SAGpClD,EAAKD,MAAMoD,QAAQC,KAAK,CAAC5B,SAAS,YAAYX,MAAM,CAACY,QAAQ,kBAE7DwB,MAAM,6BApBVjD,EAAKa,MAAM,CACPD,SAAS,GACToC,SAAS,IAJChD,wEA6BdiC,QAAQC,IAAI/B,KAAKJ,OACjB,IAAMsD,EACFrC,EAAAC,EAAAC,cAAAoC,EAAA,OACItC,EAAAC,EAAAC,cAAAoC,EAAA,EAAMC,KAAN,KACIvC,EAAAC,EAAAC,cAAA,KAAG0B,OAAO,SAASY,IAAI,sBAAsBC,KAAK,0BAAlD,kBAIJzC,EAAAC,EAAAC,cAAAoC,EAAA,EAAMC,KAAN,KACIvC,EAAAC,EAAAC,cAAA,KAAG0B,OAAO,SAASY,IAAI,sBAAsBC,KAAK,0BAAlD,kBAIJzC,EAAAC,EAAAC,cAAAoC,EAAA,EAAMC,KAAN,KACIvC,EAAAC,EAAAC,cAAA,KAAG0B,OAAO,SAASY,IAAI,sBAAsBC,KAAK,yBAAlD,mBAMZ,OACIzC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,sCACAF,EAAAC,EAAAC,cAAA,+BACAF,EAAAC,EAAAC,cAAA,SAAOI,KAAK,OAAOuB,KAAK,WAAWa,GAAG,WAAWZ,MAAO3C,KAAKU,MAAMD,SAAU+C,SAAUxD,KAAKuC,cAC5F1B,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,SAAOI,KAAK,MAAMuB,KAAK,WAAWa,GAAG,WAAWZ,MAAO3C,KAAKU,MAAMmC,SAAUW,SAAUxD,KAAKuC,cAC3F1B,EAAAC,EAAAC,cAAA,UAAQK,QAASpB,KAAK4C,OAAtB,gBACA/B,EAAAC,EAAAC,cAAA0C,EAAA,GAAUC,QAASR,EAAMS,UAAU,eAC/B9C,EAAAC,EAAAC,cAAAG,EAAA,sCA5DmBM,IAAMC,WCOvCmC,cACF,SAAAA,EAAYhE,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA4D,IACd/D,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA8D,GAAAzD,KAAAH,KAAMJ,KAEVmC,IAAI,WACAD,QAAQC,IAAIlC,EAAKD,OACjBC,EAAKD,MAAMoD,QAAQC,KAAK,WALVpD,wEAQd,OACIgB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,uFAGAF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAeiB,SAAS,iBACpBpB,EAAAC,EAAAC,cAACmB,EAAA,EAAD,KACIrB,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAOC,KAAK,YAAYC,UAAWR,IACnCf,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAOC,KAAK,SAASC,UAAWE,EAAWU,QAAShD,KAAKJ,MAAMoD,UAC/DnC,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAUjB,GAAG,eAGjBJ,EAAAC,EAAAC,cAAAG,EAAA,GAAQE,QAASpB,KAAK+B,KAAtB,yBArBIP,IAAMC,WA2BfY,sBAAWuB,GAC1BC,IAASC,OAAOjD,EAAAC,EAAAC,cAACgD,EAAD,MAAeC,SAASC,eAAe,SN4FjD,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.458d99f7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"opc\":\"_3PgfY_Pd9on_PYwILewhl-\",\"header\":\"_2PZ3YliELk2P-c0LL-lLff _3PgfY_Pd9on_PYwILewhl-\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\r\nimport {Link,NavLink} from 'react-router-dom'\r\nimport {Button} from 'antd'\r\nvar HeaderCss = require('./header.css')\r\n\r\nexport default class DefaultHeader extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            username:window.localStorage.getItem(\"username\")\r\n        }\r\n    }\r\n\r\n    logout = e=>{\r\n        window.localStorage.removeItem(\"username\")\r\n        window.localStorage.removeItem(\"token\")\r\n        this.setState({\r\n            username:null\r\n        })\r\n    }\r\n\r\n    render(){\r\n        let userProfile=null;\r\n        \r\n\r\n        if(this.state.username!=null){\r\n            userProfile=\r\n            <div>\r\n                <NavLink to=\"/profile\">{this.state.username}</NavLink>\r\n                <Button type=\"primary\" onClick={this.logout}>登出</Button>\r\n            </div>\r\n            \r\n        }else{\r\n            userProfile=<NavLink to={{pathname:\"/login\",state:{message:\"hello react\"}}}>登陆</NavLink>\r\n        }\r\n\r\n        return(\r\n            <div className={HeaderCss.header}>\r\n                {/* <img src=\"/imgs/logo.png\" alt=\"\"/> */}\r\n                <NavLink to=\"/homepage\">XXXXXX系统</NavLink>\r\n                {userProfile}\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react'\r\n\r\nexport default class BuyPage extends React.Component{\r\n\r\n    render(){\r\n        return(\r\n            <div>这里是商品列表</div>\r\n        )\r\n    }\r\n}","import React from 'react'\r\n\r\nexport default class SalePage extends React.Component{\r\n\r\n    render(){\r\n        return(\r\n            <div>这里是我上架的物品</div>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport DefaultHeader from './../Header/header'\r\nimport BuyPage from './Buy/buy';\r\nimport SalePage from './Sale/sale';\r\nimport { BrowserRouter, Route, Link ,withRouter} from 'react-router-dom'\r\nimport {Button} from 'antd'\r\nclass HomePage extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n    }\r\n    handle = ()=>(\r\n        console.log(this.props)\r\n    )\r\n    render() {\r\n        // console.log(this.props.location.state.message)\r\n        return (\r\n            <div>\r\n                <Button onClick={this.handle}>按钮1</Button>\r\n                <DefaultHeader />\r\n                <BrowserRouter basename=\"homepage\">\r\n                    <div>\r\n                        <Link to=\"/buy\">我要买</Link>\r\n                        <Link to=\"/sale\">我要卖</Link>\r\n                        <Link to=\"/login\">登陆</Link>\r\n                    </div>\r\n                    <div>\r\n                        <Route path=\"/buy\" component={BuyPage}></Route>\r\n                        <Route path=\"/sale\" component={SalePage}></Route>\r\n                    </div>\r\n                </BrowserRouter>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default withRouter(HomePage)","import React from 'react'\r\nimport { Dropdown, Button ,Menu} from 'antd'\r\nexport default class LoginPage extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            username:'',\r\n            password:''\r\n        }\r\n    }\r\n    changeValue = e=>{  \r\n        this.setState({\r\n            [e.target.name]:e.target.value\r\n        })\r\n    }\r\n    login = e=>{\r\n        //去访问服务器，登陆成功\r\n        if(this.state.username==='123'&&this.state.password==='123'){\r\n            alert('登陆成功');\r\n            window.localStorage.setItem(\"username\",\"123\");\r\n            window.localStorage.setItem(\"token\",\"11111\");\r\n\r\n            //跳转首页\r\n            this.props.history.push({pathname:'/homepage',state:{message:\"hello world\"}})\r\n        }else{\r\n            alert('登陆失败');\r\n        }      \r\n        \r\n    }\r\n    render() {\r\n        // console.log(this.props.location.state.message)\r\n        \r\n        console.log(this.props)\r\n        const menu = (\r\n            <Menu>\r\n                <Menu.Item>\r\n                    <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"http://www.alipay.com/\">\r\n                        1st menu item\r\n                </a>\r\n                </Menu.Item>\r\n                <Menu.Item>\r\n                    <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"http://www.taobao.com/\">\r\n                        2nd menu item\r\n                </a>\r\n                </Menu.Item>\r\n                <Menu.Item>\r\n                    <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"http://www.tmall.com/\">\r\n                        3rd menu item\r\n                </a>\r\n                </Menu.Item>\r\n            </Menu>\r\n        );\r\n        return (\r\n            <div>\r\n                <h3>登陆页面</h3>\r\n                <p>用户名</p>\r\n                <input type=\"text\" name=\"username\" id=\"username\" value={this.state.username} onChange={this.changeValue}/>\r\n                <p>密码</p>\r\n                <input type=\"pwd\" name=\"password\" id=\"password\" value={this.state.password} onChange={this.changeValue}/>\r\n                <button onClick={this.login} >登陆</button>\r\n                <Dropdown overlay={menu} placement=\"bottomRight\">\r\n                    <Button>下拉框</Button>\r\n                </Dropdown>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter, Route, Switch,Redirect,withRouter } from 'react-router-dom'\n//引入/导入\nimport {Button} from 'antd'\nimport HomePage from './HomePage/homePage'\nimport LoginPage from './Login/login';\nclass IndexPage extends React.Component {\n    constructor(props){\n        super(props)\n    }\n    log=()=>{\n        console.log(this.props)\n        this.props.history.push(\"/login\")\n    }\n    render() {\n        return (\n            <div>\n                <div>\n                    不被路由管理的内容，广告\n                </div>\n                <BrowserRouter basename='react-example'>\n                    <Switch>\n                        <Route path=\"/homepage\" component={HomePage}></Route>\n                        <Route path=\"/login\" component={LoginPage} history={this.props.history}></Route>\n                        <Redirect to=\"/homepage\"></Redirect>\n                    </Switch>\n                    \n                    <Button onClick={this.log}>按钮</Button>\n                </BrowserRouter>\n            </div>\n        )\n    }\n}\nexport default withRouter(IndexPage)\nReactDOM.render(<IndexPage />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}